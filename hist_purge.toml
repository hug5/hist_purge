
# history_source_file = ""
# history_source_file = "history.txt"
# history_source_file = "history.txt"
#history_source_file = "bash_history"

history_source_file = "~/.bash_history"
#history_source_file = "history.txt"

# comment out when not testing;
#history_write_file = "history2.txt"


# Sort history lines: true or false; lowercase only; true is default;
sort_lines = true



[filter_rules]

  # Exact match
  exact_include = [
  ]

  exact_exclude = [
    "",
    "!",
    ".",
    "cp",
    "c",
    "clear"
  ]


  # substring match; this matches anywhere;
  containing_include = [
    #"###",
  ]
  containing_exclude = [

  ]


  # Regex expression; regex characters should be double escaped, \\, if want to use as literal
  regex_include = [
    ".*###$"  # specifically target ending with ###
  ]

  regex_exclude = [
    "^touch ",
    "^hs ",
    "^trash",
    "^locate ",
    "^whereis ",
    "^which ",
    "^whois ",
    "^df ",
    "^ffmpeg ",
    "^npm ",
    "^git",
    "^duplicity",
    "^yt-dlp",
    "^g ",
    "^;",
    "^jvv ",
    # "^find ",
    "^sudo apt ",
    "^z ",
    "^.{1}$",    # Any single character
    "^\\.",
    "^#",
    "^!",
    "^man ",
    "^cd ",
    "^c ",
    "^cp ",
    "^mv ",
    "^sudo mv ",
    "^sudo cp ",
    "^hs ",
    "^~",
    "^vi ",
    "^vim ",
    "^$",
    "^,",
    "^vidir ",
    "^tree ",
    "^rm ",
    "^l ",
    "^ll ",
    "^yt-dlp",
    "^target=",
    "^target.",
    "^source.",
    "^source=",
    "^./",
    "^\\?",
    "^:",
    # "^[ \\t\\r\\n]*$",   # regex way to remove blank
  ]
